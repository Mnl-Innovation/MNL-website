---
interface Props {}

const { searchParams } = Astro.url;
const service = searchParams.get("service") ?? "";

type ServiceKey = "cibersecurity" | "managed" | "cloud" | "web";

const serviceData: Record<
	ServiceKey,
	{ title: string; description: string; icon: string }
> = {
	cibersecurity: {
		title: "Get in touch with our Cybersecurity team",
		description:
			"Protect your business with advanced cybersecurity solutions. Contact our experts for a secure future.",
		icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.623 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z"/></svg>`,
	},
	managed: {
		title: "Get in touch about Managed IT Services",
		description:
			"Optimize your IT infrastructure with our managed services. Reach out for tailored solutions.",
		icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"/></svg>`,
	},
	cloud: {
		title: "Get in touch about Cloud Solutions",
		description:
			"Scale your business with our cloud solutions. Contact us for migration and optimization.",
		icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15a4.5 4.5 0 004.5 4.5H18a3.75 3.75 0 001.332-7.257 3 3 0 00-3.758-3.848 5.25 5.25 0 00-10.233 2.33A4.502 4.502 0 002.25 15z"/></svg>`,
	},
	web: {
		title: "Get in touch with our development team",
		description:
			"Scale your business with our cloud solutions. Contact us for migration and optimization.",
		icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15a4.5 4.5 0 004.5 4.5H18a3.75 3.75 0 001.332-7.257 3 3 0 00-3.758-3.848 5.25 5.25 0 00-10.233 2.33A4.502 4.502 0 002.25 15z"/></svg>`,
	}
};

const selected =
	service in serviceData
		? serviceData[service as ServiceKey]
		: {
				title: "Get in touch with us",
				description:
					"Got an idea in mind? Write to us and let's bring it to life together!",
				icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"/></svg>`,
			};
---

<!-- intl-tel-input CSS -->
<link
	rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/18.2.1/css/intlTelInput.css"
/>

<div class="relative isolate pt-24">
	<div
		class="absolute inset-x-0 top-1/2 -z-10 flex -translate-y-1/2 transform-gpu justify-center overflow-hidden blur-3xl sm:bottom-0 sm:right-[calc(50%-6rem)] sm:top-auto sm:translate-y-0 sm:transform-gpu sm:justify-end"
		aria-hidden="true"
	>
		<div
			class="aspect-[1108/632] w-[69.25rem] flex-none bg-gradient-to-r from-[#ff80b5] to-[#9089fc] opacity-25"
			style="clip-path: polygon(73.6% 48.6%, 91.7% 88.5%, 100% 53.9%, 97.4% 18.1%, 92.5% 15.4%, 75.7% 36.3%, 55.3% 52.8%, 46.5% 50.9%, 45% 37.4%, 50.3% 13.1%, 21.3% 36.2%, 0.1% 0.1%, 5.4% 49.1%, 21.4% 36.4%, 58.9% 100%, 73.6% 48.6%)"
		>
		</div>
	</div>

	<div class="mx-auto grid max-w-7xl grid-cols-1 lg:grid-cols-2">
		<div class="relative px-6 pb-20 pt-24 sm:pt-32 lg:static lg:px-8 lg:py-48">
			<div class="mx-auto max-w-xl lg:mx-0 lg:max-w-lg">
				<div class="mx-auto mt-6 max-w-lg space-y-4">
					<div class="flex gap-x-6">
						<div
							class="flex h-10 w-10 shrink-0 items-center justify-center rounded-lg bg-[#00629e]"
							id="service-icon"
						>
							<div set:html={selected.icon} id="icon-content" />
						</div>
						<div>
							<h3
								class="text-base font-semibold leading-7 text-black font-nunito-sans"
								id="service-title"
							>
								{selected.title}
							</h3>
							<p
								class="mt-2 leading-7 text-gray-600 font-nunito"
								id="service-description"
							>
								{selected.description}
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>
		<form
			id="contact-form"
			action=""
			method="post"
			class="px-6 pb-24 pt-20 sm:pb-32 lg:px-8 lg:py-48"
		>
			<input
				type="hidden"
				name="csrfmiddlewaretoken"
				value="Z0bmepYoKOgOHKPQgiZx3LOBVCVLKhetntCGueWINfWsoskZOsUYYa2sCelk4Wz1"
			/>
			<input
				type="hidden"
				name="service_type"
				value={service}
				id="service_type_field"
			/>

			<div class="mx-auto max-w-xl lg:mr-0 lg:max-w-lg">
				<div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
					<div>
						<label
							for="from_name"
							class="block text-sm font-nunito leading-6 text-black"
						>
							First name<span class="text-xs text-red-500">*</span>
						</label>
						<div class="mt-2.5">
							<input
								type="text"
								id="from_name"
								name="from_name"
								maxlength="50"
								class="block w-full rounded-md border-0 bg-gray-100 px-3.5 py-2 text-gray-800 shadow-sm ring-1 ring-inset ring-white/20 focus:ring-0 focus:ring-inset focus:ring-white sm:text-sm sm:leading-6"
								required
							/>
						</div>
					</div>
					<div>
						<label
							for="from_last_name"
							class="block text-sm font-nunito leading-6 text-black"
						>
							Last name<span class="text-xs text-red-500">*</span>
						</label>
						<div class="mt-2.5">
							<input
								type="text"
								id="from_last_name"
								name="from_last_name"
								maxlength="50"
								class="block w-full rounded-md border-0 bg-gray-100 px-3.5 py-2 text-gray-800 shadow-sm ring-1 ring-inset ring-white/20 focus:ring-0 focus:ring-inset focus:ring-white sm:text-sm sm:leading-6"
								required
							/>
						</div>
					</div>
					<div class="sm:col-span-2">
						<label
							for="reply_to"
							class="block text-sm font-nunito leading-6 text-black"
						>
							Email<span class="text-xs text-red-500">*</span>
						</label>
						<div class="mt-2.5">
							<input
								type="email"
								id="reply_to"
								name="reply_to"
								maxlength="254"
								class="block w-full rounded-md border-0 bg-gray-100 px-3.5 py-2 text-gray-800 shadow-sm ring-1 ring-inset ring-white/20 focus:ring-0 focus:ring-inset focus:ring-white sm:text-sm sm:leading-6"
								required
							/>
						</div>
					</div>
					<div class="sm:col-span-2">
						<label
							for="id_phone"
							class="block text-sm font-nunito leading-6 text-black"
						>
							Phone number
						</label>
						<div class="mt-2.5">
							<input
								type="tel"
								name="phone"
								class="block w-full rounded-md border-0 bg-gray-100 px-3.5 py-2 text-gray-800 shadow-sm ring-1 ring-inset ring-white/20 focus:ring-0 focus:ring-inset focus:ring-white sm:text-sm sm:leading-6"
								id="id_phone"
								placeholder="Enter your phone number"
							/>
						</div>
					</div>
					<div class="sm:col-span-2">
						<label
							for="message"
							class="block text-sm font-nunito leading-6 text-black"
						>
							Message<span class="text-xs text-red-500">*</span>
						</label>
						<div class="mt-2.5">
							<textarea
								name="message"
								id="message"
								cols="40"
								rows="10"
								class="block w-full rounded-md border-0 bg-gray-100 px-3.5 py-2 text-gray-800 shadow-sm ring-1 ring-inset ring-white/20 focus:ring-0 focus:ring-inset focus:ring-white sm:text-sm sm:leading-6"
								required
								placeholder="Tell us about your project or idea..."></textarea>
						</div>
					</div>
				</div>

				<div class="cf-turnstile mt-5" data-sitekey="0x4AAAAAABfUYC-k_-g6SXhP">
				</div>

				<div class="mt-8 flex justify-end">
					<button
						type="submit"
						class="rounded-md border border-black bg-[#00629e] px-3.5 py-2.5 text-center text-sm text-white shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black hover:bg-[#004a7c] transition-colors duration-200"
					>
						Send message
					</button>
				</div>
			</div>
		</form>
	</div>

	<div
		class="absolute left-1/2 right-0 top-full -z-10 hidden -translate-y-1/2 transform-gpu overflow-hidden blur-3xl sm:block"
		aria-hidden="true"
	>
		<div
			class="aspect-[1155/678] w-[72.1875rem] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30"
			style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)"
		>
		</div>
	</div>
</div>

<style>
	input,
	textarea {
		border: 2px solid #00629e;
		border-radius: 6px;
		padding: 0.5rem;
		outline: none;
		transition: border-color 0.3s ease;
	}

	input:focus,
	textarea:focus {
		border-color: #004a7c;
	}

	/* intl-tel-input customization */
	:global(.iti) {
		width: 100% !important;
	}

	:global(.iti__tel-input) {
		border: 2px solid #00629e !important;
		border-radius: 6px !important;
		padding: 0.5rem 0.5rem 0.5rem 3.5rem !important;
		outline: none !important;
		transition: border-color 0.3s ease !important;
		background-color: #f3f4f6 !important;
		width: 100% !important;
		height: auto !important;
		color: #1f2937 !important;
		font-size: 0.875rem !important;
		line-height: 1.5rem !important;
	}

	:global(.iti__tel-input:focus) {
		border-color: #004a7c !important;
		box-shadow: none !important;
	}

	:global(.iti__country-list) {
		border-radius: 8px !important;
		box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15) !important;
		border: 1px solid #d1d5db !important;
		max-height: 200px !important;
		overflow-y: auto !important;
		background: white !important;
	}

	:global(.iti__country) {
		padding: 0.75rem 1rem !important;
		border-bottom: 1px solid #f3f4f6 !important;
	}

	:global(.iti__country:hover) {
		background: #f9fafb !important;
	}

	:global(.iti__country:last-child) {
		border-bottom: none !important;
	}

	:global(.iti__selected-country) {
		padding: 0 0.75rem !important;
		border-radius: 6px 0 0 6px !important;
		background-color: #f3f4f6 !important;
	}

	:global(.iti__selected-country:hover) {
		background-color: #e5e7eb !important;
	}

	:global(.iti__arrow) {
		border-left: 4px solid transparent !important;
		border-right: 4px solid transparent !important;
		border-top: 4px solid #6b7280 !important;
		border-bottom: none !important;
	}

	:global(.iti__arrow--up) {
		border-top: none !important;
		border-bottom: 4px solid #6b7280 !important;
	}

	:global(.iti--allow-dropdown .iti__tel-input.phone-error) {
		border-color: #ef4444 !important;
	}

	:global(.iti--allow-dropdown .iti__tel-input.phone-valid) {
		border-color: #22c55e !important;
	}
</style>

<!-- intl-tel-input JavaScript -->
<script
	src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/18.2.1/js/intlTelInput.min.js"
></script>

<script is:inline>
	let iti;

	document.addEventListener("DOMContentLoaded", function () {
		// Client-side service update logic
		const serviceData = {
			cibersecurity: {
				title: "Get in touch with our Cybersecurity team",
				description:
					"Protect your business with advanced cybersecurity solutions. Contact our experts for a secure future.",
				icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.623 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z"/></svg>`,
			},
			managed: {
				title: "Get in touch about Managed IT Services",
				description:
					"Optimize your IT infrastructure with our managed services. Reach out for tailored solutions.",
				icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"/></svg>`,
			},
			cloud: {
				title: "Get in touch about Cloud Solutions",
				description:
					"Scale your business with our cloud solutions. Contact us for migration and optimization.",
				icon: `<svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15a4.5 4.5 0 004.5 4.5H18a3.75 3.75 0 001.332-7.257 3 3 0 00-3.758-3.848 5.25 5.25 0 00-10.233 2.33A4.502 4.502 0 002.25 15z"/></svg>`,
			},
		};

		// Get URL parameter on client side
		const urlParams = new URLSearchParams(window.location.search);
		const clientService = urlParams.get("service");

		// Update content if we have a valid service parameter
		if (clientService && serviceData[clientService]) {
			const selectedService = serviceData[clientService];

			// Update title
			const titleElement = document.getElementById("service-title");
			if (titleElement) titleElement.textContent = selectedService.title;

			// Update description
			const descElement = document.getElementById("service-description");
			if (descElement) descElement.textContent = selectedService.description;

			// Update icon
			const iconElement = document.getElementById("icon-content");
			if (iconElement) iconElement.innerHTML = selectedService.icon;

			// Update hidden form field
			const serviceField = document.getElementById("service_type_field");
			if (serviceField) serviceField.value = clientService;

			console.log("Service updated to:", clientService);
		}

		// Initialize intl-tel-input
		const phoneInput = document.querySelector("#id_phone");

		if (phoneInput) {
			iti = window.intlTelInput(phoneInput, {
				initialCountry: "us",
				preferredCountries: ["co", "us", "mx", "br", "ar", "pe", "cl", "ec"],
				separateDialCode: true,
				nationalMode: true,
				autoPlaceholder: "aggressive",
				placeholderNumberType: "MOBILE",
				utilsScript:
					"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/18.2.1/js/utils.js",
			});

			phoneInput.addEventListener("input", function () {
				const phoneNumber = phoneInput.value.trim();

				if (phoneNumber === "") {
					phoneInput.classList.remove("phone-error", "phone-valid");
					return;
				}

				if (iti.isValidNumber()) {
					phoneInput.classList.remove("phone-error");
					phoneInput.classList.add("phone-valid");
				} else {
					phoneInput.classList.remove("phone-valid");
					phoneInput.classList.add("phone-error");
				}
			});

			phoneInput.addEventListener("countrychange", function () {
				if (phoneInput.value.trim()) {
					phoneInput.dispatchEvent(new Event("input"));
				}
			});
		}
	});

	document
		.getElementById("contact-form")
		.addEventListener("submit", function (event) {
			event.preventDefault();

			const phoneInput = document.querySelector("#id_phone");
			let isValid = true;
			let errorMessage = "";

			if (phoneInput && phoneInput.value.trim()) {
				if (!iti.isValidNumber()) {
					isValid = false;
					errorMessage = "Please enter a valid phone number.";
					phoneInput.classList.add("phone-error");
					phoneInput.focus();
				} else {
					phoneInput.classList.remove("phone-error");
					phoneInput.classList.add("phone-valid");
				}
			}

			if (!isValid) {
				alert(errorMessage);
				return;
			}

			let fullPhoneNumber = "";
			let countryCode = "";
			let countryName = "";
			let nationalNumber = "";

			if (iti && phoneInput.value.trim()) {
				fullPhoneNumber = iti.getNumber();
				const countryData = iti.getSelectedCountryData();
				countryCode = countryData.dialCode;
				countryName = countryData.name;
				nationalNumber = phoneInput.value.trim();
			}

			if (fullPhoneNumber) {
				let hiddenPhoneInput = document.querySelector(
					'input[name="full_phone"]'
				);
				if (!hiddenPhoneInput) {
					hiddenPhoneInput = document.createElement("input");
					hiddenPhoneInput.type = "hidden";
					hiddenPhoneInput.name = "full_phone";
					this.appendChild(hiddenPhoneInput);
				}
				hiddenPhoneInput.value = fullPhoneNumber;

				let hiddenCountryCodeInput = document.querySelector(
					'input[name="country_code"]'
				);
				if (!hiddenCountryCodeInput) {
					hiddenCountryCodeInput = document.createElement("input");
					hiddenCountryCodeInput.type = "hidden";
					hiddenCountryCodeInput.name = "country_code";
					this.appendChild(hiddenCountryCodeInput);
				}
				hiddenCountryCodeInput.value = countryCode;

				let hiddenCountryNameInput = document.querySelector(
					'input[name="country_name"]'
				);
				if (!hiddenCountryNameInput) {
					hiddenCountryNameInput = document.createElement("input");
					hiddenCountryNameInput.type = "hidden";
					hiddenCountryNameInput.name = "country_name";
					this.appendChild(hiddenCountryNameInput);
				}
				hiddenCountryNameInput.value = countryName;

				let hiddenNationalNumberInput = document.querySelector(
					'input[name="national_number"]'
				);
				if (!hiddenNationalNumberInput) {
					hiddenNationalNumberInput = document.createElement("input");
					hiddenNationalNumberInput.type = "hidden";
					hiddenNationalNumberInput.name = "national_number";
					this.appendChild(hiddenNationalNumberInput);
				}
				hiddenNationalNumberInput.value = nationalNumber;
			}

			emailjs.sendForm("service_dgte8o9", "template_vp3beyz", this).then(
				function () {
					alert("Email sent successfully!");
					window.location.reload();
				},
				function (error) {
					alert("Error: " + JSON.stringify(error));
				}
			);
		});
</script>
